{"version":3,"sources":["lib/theme.tsx","components/Display.tsx","components/Pad.tsx","components/History.tsx","components/Calc.tsx","components/SwitchTheme.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ThemeCtx","React","createContext","dark","switchTheme","useTheme","context","useContext","undefined","Error","ThemeProvider","children","useState","setDark","Provider","value","prev","Display","display","className","classNames","Pad","onNumClick","onPointButtonClick","onOperatorButtonClick","onChangeSignButtonClick","onResultButtonClick","onClearButtonClick","switchHistory","numButton","etcButton","operatorButton","handleKeyDown","keyCode","shiftKey","console","log","useEffect","document","body","addEventListener","removeEventListener","onClick","history","window","localStorage","getItem","split","History","wrapper","historyText","map","math","Calc","result","setResult","waitingForOperand","setWaitingForOperand","pendingOperator","setPendingOperator","setDisplay","showHistory","setShowHistory","calculate","rightOperand","newResult","res","push","setItem","toString","slice","digit","newDisplay","length","indexOf","operator","operand","Number","SwitchTheme","type","checked","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.231f15d4.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\n\nconst ThemeCtx = React.createContext({\n  dark: false,\n  switchTheme: () => {},\n});\n\nexport const useTheme = () => {\n  const context = useContext(ThemeCtx);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeCtx\");\n  }\n\n  return context;\n};\n\nexport const ThemeProvider: React.FC = ({ children }) => {\n  const [dark, setDark] = useState(false);\n\n  const switchTheme = () => {\n    setDark((prev) => !prev);\n  };\n\n  return (\n    <ThemeCtx.Provider value={{ dark, switchTheme }}>\n      {children}\n    </ThemeCtx.Provider>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"../css/style.css\";\n\n//utils\nimport { useTheme } from \"../lib/theme\";\n\ninterface IDisplay {\n  display: string;\n}\n\nexport const Display: React.FC<IDisplay> = ({ display }) => {\n  const { dark } = useTheme();\n  const className = classNames(\"display\", dark ? \"display_dark\" : null);\n\n  return (\n    <div className={className}>\n      <span>{display}</span>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport classNames from \"classnames\";\n\nimport \"../css/style.css\";\n\n//utils\nimport { useTheme } from \"../lib/theme\";\n\ninterface IButtonsGroup {\n  onNumClick: (value: number) => void;\n  onPointButtonClick: () => void;\n  onOperatorButtonClick: (operator: string) => void;\n  onChangeSignButtonClick: () => void;\n  onResultButtonClick: () => void;\n  onClearButtonClick: () => void;\n  switchHistory: () => void;\n}\n\nexport const Pad: React.FC<IButtonsGroup> = ({\n  onNumClick,\n  onPointButtonClick,\n  onOperatorButtonClick,\n  onChangeSignButtonClick,\n  onResultButtonClick,\n  onClearButtonClick,\n  switchHistory,\n}) => {\n  const { dark } = useTheme();\n  const numButton = classNames(\n    \"button\",\n    dark ? \"num-button_dark\" : \"num-button_light\"\n  );\n\n  const etcButton = classNames(\n    \"button\",\n    dark ? \"etc-button_dark\" : \"etc-button_light\"\n  );\n\n  const operatorButton = classNames(\n    \"button\",\n    dark ? \"operator-button_dark\" : \"operator-button_light\"\n  );\n\n  const handleKeyDown = ({ keyCode, shiftKey }: KeyboardEvent) => {\n    console.log(keyCode);\n    if (keyCode >= 48 && keyCode <= 57 && !shiftKey) {\n      onNumClick((keyCode - 48) as number);\n    } else if (keyCode >= 96 && keyCode <= 105) {\n      onNumClick((keyCode - 96) as number);\n    } else if (keyCode === 107 || (keyCode === 187 && shiftKey)) {\n      onOperatorButtonClick(\"+\");\n    } else if (keyCode === 109 || keyCode === 189) {\n      onOperatorButtonClick(\"-\");\n    } else if (keyCode === 106 || (keyCode === 56 && shiftKey)) {\n      onOperatorButtonClick(\"ร\");\n    } else if (keyCode === 111 || keyCode === 191) {\n      onOperatorButtonClick(\"รท\");\n    } else if (keyCode === 13 || (keyCode === 187 && !shiftKey)) {\n      onResultButtonClick();\n    } else if (keyCode === 46) {\n      onClearButtonClick();\n    } else if (keyCode === 27) {\n      onClearButtonClick();\n    } else if (keyCode === 78) {\n      onChangeSignButtonClick();\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.body.removeEventListener(\"keydown\", handleKeyDown);\n  });\n\n  return (\n    <>\n      <div className=\"buttonRow\">\n        <div className={etcButton} onClick={() => onClearButtonClick()}>\n          AC\n        </div>\n        <div className={etcButton} onClick={() => onChangeSignButtonClick()}>\n          &#177;\n        </div>\n        <div className={etcButton}>%</div>\n        <div\n          className={operatorButton}\n          onClick={() => onOperatorButtonClick(\"รท\")}\n        >\n          &divide;\n        </div>\n      </div>\n      <div className=\"buttonRow\">\n        <div className={numButton} onClick={() => onNumClick(7)}>\n          7\n        </div>\n        <div className={numButton} onClick={() => onNumClick(8)}>\n          8\n        </div>\n        <div className={numButton} onClick={() => onNumClick(9)}>\n          9\n        </div>\n        <div\n          className={operatorButton}\n          onClick={() => onOperatorButtonClick(\"ร\")}\n        >\n          x\n        </div>\n      </div>\n      <div className=\"buttonRow\">\n        <div className={numButton} onClick={() => onNumClick(4)}>\n          4\n        </div>\n        <div className={numButton} onClick={() => onNumClick(5)}>\n          5\n        </div>\n        <div className={numButton} onClick={() => onNumClick(6)}>\n          6\n        </div>\n        <div\n          className={operatorButton}\n          onClick={() => onOperatorButtonClick(\"-\")}\n        >\n          -\n        </div>\n      </div>\n      <div className=\"buttonRow\">\n        <div className={numButton} onClick={() => onNumClick(1)}>\n          1\n        </div>\n        <div className={numButton} onClick={() => onNumClick(2)}>\n          2\n        </div>\n        <div className={numButton} onClick={() => onNumClick(3)}>\n          3\n        </div>\n        <div\n          className={operatorButton}\n          onClick={() => onOperatorButtonClick(\"+\")}\n        >\n          +\n        </div>\n      </div>\n      <div className=\"buttonRow\">\n        <div className={numButton} onClick={() => onNumClick(0)}>\n          0\n        </div>\n        <div className={numButton} onClick={() => switchHistory()}>\n          &#8801;\n        </div>\n        <div className={numButton} onClick={() => onPointButtonClick()}>\n          .\n        </div>\n        <div className={operatorButton} onClick={() => onResultButtonClick()}>\n          =\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"../css/style.css\";\n\n//utils\nimport { useTheme } from \"../lib/theme\";\n\ninterface IHistory {\n  switchHistory: () => void;\n}\n\nlet history = window.localStorage.getItem(\"history\")?.split(\",\");\nconsole.log(history);\n\nexport const History: React.FC<IHistory> = ({ switchHistory }) => {\n  const { dark } = useTheme();\n  const wrapper = classNames(\n    \"wrapper\",\n    dark ? \"wrapper_dark\" : \"wrapper_light\"\n  );\n\n  const numButton = classNames(\n    \"button\",\n    dark ? \"num-button_dark\" : \"num-button_light\"\n  );\n\n  const historyText = classNames(dark ? \"num-button_dark\" : \"num-button_light\");\n\n  return (\n    <div className={wrapper}>\n      <div className={numButton} onClick={() => switchHistory()}>\n        &#8592;\n      </div>\n      {history?.map((math) => (\n        <p className={historyText} key={math}>\n          {math}\n        </p>\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\n\n//components\nimport { Display } from \"./Display\";\nimport { Pad } from \"./Pad\";\nimport { History } from \"./History\";\nimport \"../css/style.css\";\n\n//utils\nimport { useTheme } from \"../lib/theme\";\n\nlet history: any = [];\n\nexport const Calc: React.FC = () => {\n  const { dark } = useTheme();\n  const [result, setResult] = useState<number>(0);\n  const [waitingForOperand, setWaitingForOperand] = useState<boolean>(true);\n  const [pendingOperator, setPendingOperator] = useState<string>();\n  const [display, setDisplay] = useState<string>(\"0\");\n\n  const [showHistory, setShowHistory] = useState<boolean>(false);\n  const switchHistory = () => {\n    setShowHistory((prev) => !prev);\n  };\n\n  const className = classNames(\n    \"wrapper\",\n    dark ? \"wrapper_dark\" : \"wrapper_light\"\n  );\n\n  const calculate = (\n    rightOperand: number,\n    pendingOperator: string\n  ): boolean => {\n    let newResult = result;\n\n    switch (pendingOperator) {\n      case \"+\":\n        newResult += rightOperand;\n        break;\n      case \"-\":\n        newResult -= rightOperand;\n        break;\n      case \"ร\":\n        newResult *= rightOperand;\n        break;\n      case \"รท\":\n        if (rightOperand === 0) {\n          return false;\n        }\n\n        newResult /= rightOperand;\n    }\n\n    let res = `${result}${pendingOperator}${\n      waitingForOperand ? \"\" : display\n    } = ${newResult}`;\n    history.push(res);\n    window.localStorage.setItem(\"history\", history);\n\n    setResult(newResult);\n    setDisplay(newResult.toString().toString().slice(0, 7));\n\n    return true;\n  };\n\n  const onNumClick = (digit: number) => {\n    let newDisplay = display;\n\n    if ((display === \"0\" && digit === 0) || display.length > 7) {\n      return;\n    }\n\n    if (waitingForOperand) {\n      newDisplay = \"\";\n      setWaitingForOperand(false);\n    }\n\n    if (display !== \"0\") {\n      newDisplay = newDisplay + digit.toString();\n    } else {\n      newDisplay = digit.toString();\n    }\n\n    setDisplay(newDisplay);\n  };\n\n  const onPointButtonClick = () => {\n    let newDisplay = display;\n\n    if (waitingForOperand) {\n      newDisplay = \"0\";\n    }\n\n    if (newDisplay.indexOf(\".\") === -1) {\n      newDisplay = newDisplay + \".\";\n    }\n\n    setDisplay(newDisplay);\n    setWaitingForOperand(false);\n  };\n\n  const onOperatorButtonClick = (operator: string) => {\n    const operand = Number(display);\n\n    if (typeof pendingOperator !== \"undefined\" && !waitingForOperand) {\n      if (!calculate(operand, pendingOperator)) {\n        return;\n      }\n    } else {\n      setResult(operand);\n    }\n\n    setPendingOperator(operator);\n    setWaitingForOperand(true);\n  };\n\n  const onChangeSignButtonClick = () => {\n    const value = Number(display);\n\n    if (value > 0) {\n      setDisplay(\"-\" + display);\n    } else if (value < 0) {\n      setDisplay(display.slice(1));\n    }\n  };\n\n  const onResultButtonClick = () => {\n    const operand = Number(display);\n\n    if (typeof pendingOperator !== \"undefined\" && !waitingForOperand) {\n      if (!calculate(operand, pendingOperator)) {\n        return;\n      }\n\n      setPendingOperator(undefined);\n    } else {\n      setDisplay(operand.toString());\n    }\n\n    setResult(operand);\n    setWaitingForOperand(true);\n  };\n\n  const onClearButtonClick = () => {\n    setResult(0);\n    setPendingOperator(undefined);\n    setDisplay(\"0\");\n    setWaitingForOperand(true);\n  };\n\n  return (\n    <>\n      {!showHistory ? (\n        <div className={className}>\n          <Display display={display} />\n          <Pad\n            onNumClick={onNumClick}\n            onPointButtonClick={onPointButtonClick}\n            onOperatorButtonClick={onOperatorButtonClick}\n            onChangeSignButtonClick={onChangeSignButtonClick}\n            onResultButtonClick={onResultButtonClick}\n            onClearButtonClick={onClearButtonClick}\n            switchHistory={switchHistory}\n          />\n        </div>\n      ) : (\n        <History switchHistory={switchHistory} />\n      )}\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { useTheme } from \"../lib/theme\";\n\nimport \"../css/style.css\";\n\nexport const SwitchTheme: React.FC = () => {\n  const { dark, switchTheme } = useTheme();\n\n  return (\n    <div className=\"switchBox\">\n      <span className=\"switchText\">light</span>\n      <label className=\"switch\">\n        <input type=\"checkbox\" checked={dark} onChange={switchTheme} />\n        <span className=\"slider round\"></span>\n      </label>\n      <span className=\"switchText\">dark</span>\n    </div>\n  );\n};\n","import React from \"react\";\n\n//components\nimport { Calc } from \"./components/Calc\";\nimport { SwitchTheme } from \"./components/SwitchTheme\";\n\nimport \"./css/style.css\";\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"main\">\n      <SwitchTheme />\n      <Calc />\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n//components\nimport { App } from \"./App\";\nimport { ThemeProvider } from \"./lib/theme\";\nimport \"./css/normalize.css\";\n\n//utils\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}